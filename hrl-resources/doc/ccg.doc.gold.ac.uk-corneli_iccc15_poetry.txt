Computational Poetry Workshop: Making Sense of Work in Progress
J. Corneli⇤

A. Jordanous

Goldsmiths College

R. Shepperd

University of Kent

J. Misztal

Jagiellonian University

S. Colton

Goldsmiths College

Abstract

Goldsmiths College

C. Guckelsberger
Goldsmiths College

This paper outlines a study of social creativity with a dialogical emphasis, taking computer poetry as our working domain. It uses the Writer’s Workshop model (Gabriel, 2002)
as the virtual laboratory in which to conduct a thought experiment. The findings of our study are applied to the FloWr
system (Charnley, Colton, and Llano, 2014). We focus on
the following questions in turn:

Creativity cannot exist in a vacuum; it develops through
feedback, learning, reflection and social interaction
with others. However, this perspective has been relatively under-investigated in computational creativity research, which typically examines systems that operate
individually. We develop a thought experiment showing
how structured dialogues can help develop the creative
aspects of computer poetry. Centrally in this approach,
we ask questions of a poem, inviting it to tell us in what
way it may be considered a “creative making.”

– How has the social dimension of creativity been explored
in CC to date?
– How can a created artefact tell us about its making, and
what can this contribute to CC?
– How can computer poetry contribute to developing a
process-based theory of poetics?
– What would have to change about the FloWr system to
implement the computational poetry workshop approach?
– What are the pros and cons of the workshop approach?
– What might be the future role of dialogue in CC?

Keywords: computer poetry, social creativity, flowcharts, Writer’s Workshops
‘We can talk,’ said the Tiger-lily: ‘when there’s anybody
worth talking to.’
Through the Looking Glass, Lewis Carroll

Introduction

Background

We are writing in a large part to champion Alan Turing’s
proposal that intelligent machines should “be able to converse with each other to sharpen their wits” (Turing, 1951).
The formalism that we propose builds on the notion of social cybernetics that flows from the following propositions
of Heinz von Foerster’s, which he uses to theorise systems
in which participants can responsibly specify their own roles
in relationship to other system participants:

Social creativity in CC
Minsky noted that computers need to be social if they are to
deal with problems of any great complexity (Minsky, 1967,
1988). We believe that this is particularly true for challenges in computational creativity, since the essence of creativity lives in its appreciation by the creative entity itself
and its audience. With creativity in ‘the eye of the beholder’
(Cardoso, Veale, and Wiggins, 2009), the ability to respond
to evaluation during the creative process (Poincaré, 1929
[1908]; Csikszentmihalyi, 1988) becomes pivotal. Social
creativity expands this paradigm by introducing co-creators
to the process, and creating works that rely on dialogue, reflection, and multiple perspectives (e.g. the stages suggested
by (Gervás and Leon, 2014)). ‘Results’ may be steeped in
process and are not always based on consensus.
The Four Ps of creativity – the creative Person, Product,
Process and Press (i.e. environment) (Rhodes, 1961) – have
been emphasised in general creativity research. Pluralising
these terms (Persons, Products, Processes) calls further attention to a social dimension of creativity, and would emphasise the way the “Press” accommodates multiple multidirectional perspectives akin to a social network in both the
modern and original senses. The Pluralised Ps remind us

“Anything said is said by an observer.”
“Anything said is said to an observer.”
(Von Foerster, 2003 [1979])
According to Jaako Seikkula and Tom Arnkil, who draw
on the philosophical and literary analysis of Mikhail Bakhtin
(Bakhtin, 2010 [1986], 1984 [1963]) in their approach to
psychosocial work,
“Dialogues could be called ‘the art of crossing boundaries’. Instead of trying to control others, the parties
reach out towards each other to hear their views better, to generate shared languages and to join resources.”
(Seikkula and Arnkil, 2014, p. 23)
⇤

M. T. Llano

Goldsmiths College

Corresponding author. Email: j.corneli@gold.ac.uk

1
Proceedings of the Sixth International Conference on Computational Creativity June 2015

268

Writ
e

spo
nds

Resp
o

R

Sp
e
x t aks

e

ns

m

B. “the Other”

m

po

Re

R es

Poe

day

Wr

A. how to become a writer1

pe
ak

et
Po
s

Listen

nd interprets
sa

State

t

der
ea s
nd

en

S

ite
for 8 hours

ad
ay

Read
8 hours a
for

that in order to understand creativity it is not sufficient to
model a lone creator or to generate an attractive artwork.
To date, computational creativity research has achieved
many successes in computational generation of creative
products, but the question of how these systems could adapt and learn from feedback to improve their creativity is
less-explored in computational creativity (Jordanous, 2015).
Evaluation has been advanced as a pivotal contributory part
of the creative process, but researchers often give priority
to generating artefacts that could be seen as creative over
the task of incorporating feedback and evaluation within the
processing of a creative system (Jordanous, 2011).
At the previous year’s International Conference on Computational Creativity (ICCC 2014) the opening session had
the theme “co-creation.” However in the main proceedings
of the conference, 36 out of 49 papers (approximately 3
in 4 papers) do not appear to mention social interaction or
the ability to respond to feedback. Some notable exceptions highlight the usefulness of interaction and feedback
for creative systems (McGraw and Hofstadter, 1993; Colton,
Bundy, and Walsh, 2000; Sosa, Gero, and Jennings, 2009;
Pérez y Pérez, Aguilar, and Negrete, 2010; Pease, Guhe,
and Smaill, 2010; Saunders, 2012). Some of this work is influenced by the DIFI (Domain-Individual-Field-Interaction)
framework (Csikszentmihalyi, 1988). However, social interaction between creative agents and their audience is often overlooked or relatively simplified: some examples in
the domain of computer poetry presented below give the
flavour. Increased development of the interactivity of creative systems, especially where this affects the way these
systems works, has been highlighted as deserving more attention (Colton and Wiggins, 2012).
FloWr is a framework for implementing creative systems
as scripts over processes that can be manipulated visually
as flowcharts (Charnley et al., 2014). Its general approach
consists of linking the inputs and outputs of code modules,
called ProcessNodes, together to create a linear flow of data.
The resulting Flowcharts can be constructed and executed
visually through a GUI; however, they are ultimately represented as scripts, which are the main medium of FloWr.
Experiments with automatic process generation in FloWr,
reported in (Charnley et al., 2014), highlight the ability of
the tool to do meta-programming and modify its own flowcharts. This suggests that FloWr has potential as an environment for modelling social creativity, where the observers are
nodes and flowcharts, and their languages are, respectively,
programming and meta-programming instructions.

Con

te

C. proto-workshop

Figure 1: (A) gives a simple recipe for the growth and development of a writer; (B) response always has dimensions
that goes beyond the utterance that is overheard; (C) adds a
reader who shares the context with the writer and responds.
and poeticity. This approach facilitates the pursuit of several alternative solution paths in parallel, focusing on more
promising results or coming back to former ideas. However
McGONNAGALL does not provide any communication
between modules. In the MASTER system for computeraided poetry generation (Kirke and Miranda, 2013) a society
of agents in various emotional states influences each other’s
moods with their pieces of poetry. The poetry-generation
process is based on social learning as the agents interact by
reciting their own pieces of poetry to each other. The generated poems are based on repeated words and sounds, and
are closer in some ways to music than to typical language.
Montfort, Pérez y Pérez, Harrell, and Campana (2013) and
Misztal and Indurkhya (2014) use blackboard approaches to
poetry-generation, in which independent specialized modules cooperate via a shared global workspace, à la (Baars,
1997). “Experts” exchange information using the blackboard, but without direct communication and without feedback about the reception of their created artifacts.
In connection with our work in the current paper, we did
a limited proof-of-concept reimplementation of some of the
core methods of blackboard poetry system inside of FloWr;
we include one of the generated poems and the corresponding flowchart.

Methods
“What are the proposed ‘lab rats’?”
The generative side of the cycles in Figure 1 has been studied
more than the reflective side. Our “lab rats” are, accordingly,
not poems per se, but rather, instances of reading and responding to poetry. Naturally, such responses could be more
or less “canned” (as with Michael Cook’s humorously nonspecific AppreciationBot2 ), so the question becomes: what
constitutes an interesting and useful response, and how will
these be developed? The idea of responses is useful at various levels. We focus here on staging an encounter between
writer and reader.

. . . and in computer poetry
In the domain of poetry-generation, there have already been
several attempts to simulate social creativity by incorporating multi-agent systems. In WASP (Gervás, 2010), social
behavior is simulated by incorporating a cooperative society of readers/critics/editors/writers consisting of specialized families of experts that cooperate during the poetrygeneration process. The McGONAGALL system (Manurung, Ritchie, and Thompson, 2012) incorporates diverse
modules as operators in evolutionary algorithms that produce poems fulfilling the constraints on grammar, meaning

Writer’s Workshops
Quoting (Gabriel, 2002, pp. 2–3):
The original idea behind the writers’ workshop was to
do a close reading of a work... looking at the words on
1
2

According to (King, 2000).
https://twitter.com/appreciationbot

2
Proceedings of the Sixth International Conference on Computational Creativity June 2015

269

Disturbance ! aesthetic emotion ! response !
artist’s decision on components of expression ! feeling of easement plus a simultaneous emerging of a
unique imaginative expression ! alleviation ! realising and converting prior psychical emotion ! unique
aesthetic experience including new conscious emotion

the page rather than the intentions of the author or the
historical and aesthetic context of the work. Under this
philosophy, the workshop doesn’t care much what the
author feels about what he or she wrote, only what’s on
the page.
Framing and any other contextualisation of the work
as it is intended to be presented is permitted, and receives critical attention. We define a Workshop closely
following Gabriel’s outline, to be an activity consisting of
these steps: presentation, listening, feedback,
questions, and reflections. The first and most important feature of feedback is for the listener to say what
they heard; in other words, what, for them, is in the work.
In some settings this is augmented with suggestions.
After any questions from the author, the commentators
may make replies to offer clarification. In related recent
work, we have shown how the Workshop framework can
help foster serendipitous discovery and invention (Corneli,
Pease, Colton, Jordanous, and Guckelsberger, 2015; Corneli
and Jordanous, 2015).

The poem is a work of progress before it is a work in progress. The purpose of a poetry workshop that attends to the
content of the poem as process is to illuminate what the poet
is exploring through his/her creative process and through the
poem. The process of reading a poem is also a process of
poiesis – and in the Workshop, the reader joins the writer in
the process of creation. Asking questions like those listed in
in Table 1 tells us what the constituent parts of the poem are
doing.

Relevance for CC research
From a CC standpoint, asking what the work tells us about
the creative process gives an objective and critical focus on
“creative evolution” (Bergson, 1911 [1907]) and provides
an antidote to the seductions of mere generation. A poetry workshop gives participants the opportunity to read
the drafts and final versions of poems by other Workshop
participants, a shared culture of critique that can be applied to previously existing poems, and a structured way to
gather feedback on one’s own work in progress. These analyses, unbiased by the explanations of the (software) creator,
will allow participants to explore and extend the conceptual space around poetry, or in practical terms, the toolbox
the agents can access. “Extending” expresses both a refinement of the tools used and the introduction of entirely new
tools. Moreover, reverse-engineering of the creative process
from artefacts will help to teach agents participating in the
workshop at which stage of their creative process these new
tools or extensions could potentially be used. Dialogue in
the workshop involves “respecting the voices of each of the
participants” (Seikkula and Arnkil, 2014), be they agents,
poems, or individual words – and suggests that we look at
the “art of boundary crossing” that is to be found inside
poems.

Content as creative process
Giving agency to the poem rather than the poet’s intentions,
the poem illuminates its own creative process. This informs
our approach to Workshop interactions, which are focusing
on the poem observing its own construction. We’re interested in context not in the literary or historical sense but in
the micro-history of the poem’s creative evolution. The originary and therefore unpredetermined nature of the creative
process means that the outcome represents a more accurate
and objective evidence of the process than the poet’s attempt
to explain the process. Moreover, to the extent that a creator knows what is expressed through the creative process,
even he or she learns this only in the course of doing the
work. Observers are only able to consider after the fact how
a creator may have selected and rejected various possibilities. The content of the poem is no more and no less than
how the poem was made.
“In a poem, objective material becomes the content and
the matter of the emotion and not just its evocative occasion.”
(Dewey, 1958 [1934], p. 69)

Bridges between ‘theory’ and ‘practice’
Our ansatz is that the Workshop could serve as a way to
develop a process-based theory of poetics. There are certain prerequisites: in particular, an underlying context is required, shared (with respect to differing points of view) by
the poet and the reader/listener (see Figure 1). Participants
are assumed to have relatively stable, enduring but evolving,
identities – either might be able to ask “Who am I?” and
“Who are you?” (Bakhtin, 1984 [1963], p. 251). Answers
would acknowledge a prepared mind with certain prior questions, abilities, involvements, and so on. However, within
the Workshop dialogues, the discussion focuses solely on the
work itself. Persistent identities allow participants to learn
from these exchanges.
Table 1 contains a list of questions that a reasonably sophisticated poetry reader might ask about poems. This is complemented by a list of questions that could be addressed, in a

P. G. Whitehouse writing on Dewey’s Art as Experience
suggests that Dewey joins Collingwood in separating aesthetic emotion from any notion of inspiration that could be
considered to be something like raw materials. An emotion
is aesthetic when it “adheres to an object formed by an expressive act” (Whitehouse, 1978, pp. 149–156). However,
“the art object does not have emotion for its significant content”; rather, the emotion “belongs to the self that is concerned in the movement of events toward an issue that is
desired or disliked” (Dewey, 1958 [1934], p. 14).

Aspects of the creative process
Doug Anderson and Carl Hausman take Collingwood’s
study further and map the creative process roughly as follows (Anderson and Hausman, 1992, pp. 299-305):
3

Proceedings of the Sixth International Conference on Computational Creativity June 2015

270

Question
What are the register(s) of the
poem?
Who is addressed?
What position(s) are present in the
poem?
What is the poem doing with the
reader?
Who are the characters in the poem?
What is the role of image(s) in the
poem?
What functions, mechanics, and
paradigms are present for the reader
to engage with?
What problems, discomforts, or diseasements are invoked in the poem?
How do these evolve?
What is the world of the poem,
and how does the poem distinguish
between this and its perception of
this?
What are the overlaps, transitions,
implicit dialogues?
What role does the chronology of
reading play, versus references to
chronology and chronological positions within the poem?
How are lexical categories used?
Are there discernible allusive effects?
Where is the poet presented with respect to the poem?

Examples

Question

cliched, instructive,
imperative
reader, poet, friend,
rival, confidante
pleading, remonstrating, ephemeral
accuse, bewilder, alienate
“the falconer”, “you”,
narrator, “two men”
“the sea”, “a bicycle”;
multiple meanings
communication, subverted cliche

Word level
What is are dictionary definitions of
this word?
What are its etymological roots?
Where did this word come from?
What pronouns are used in the
poem?
Phrase level
What are the components?
Do the components have a negative
or positive connotation?
What are the modifiers attached to
the components?

horror, self-loathing,
rejection, desire
E.g. an image may
start to take over from
a register
“Surely”,
“must”;
sacred vs mundane;
perspectival vs surreal; tale vs telling
“twinned” lines/ideas,
juxtaposed parts of
the poem
flagged development,
evolution, movement,
stasis

WordNet expert
Etymology expert
Provenance expert
Pronoun expert
Keywords expert
Association expert
Modifer expert

Sentence level
What is the parse tree?

Grammar expert

Line level
How long is the line?
Where does it break?
Where is there white space?

Counting expert
Breathing expert
Position expert

Poem level
How are terms that exhibit emotion
distributed within the poem?
Where is there alliteration (rhyme,
consonance) in the poem?
Does the poem have a metrical
structure?
How repetitive is the poem?
Does the poem cohere?
Does the poem have a progression?
Where are the various elements of
the poem concentrated?

solid nouns, tortuous
adjectives, indistinct
adverbs
illustrating the literary
apprenticeship of the
author (or reader)
Confidence, determination, exploration

Agent concerned

Distribution expert
Phonics expert
Rhythm expert
Repetition expert
Thematic expert
Narrative expert
Entropy expert

Table 2: Questions we imagine a computer would currently
be capable of answering when reading a poem
2. The use of the word attention is not being interrogated or acknowledged for its importance. Its qualifying word is startle, used here as an adjective; acknowledging the fact that the attention is noted, but
is not yet part of the transformative of the poem.
3. This is repeated in the next references to the aesthetic
experience as a lonely encounter, exclusive ruler,
horrible glimpse and introspective consciousness.
4. The contact made between the poem and its own
construction is qualified in negative terms attached
to the words demon, encounter and consciousness.
5. This poem does not welcome the intimacy of bringing anything to aesthetic consciousness so that it
might be expressed. Why do I say that? Because
the words are generalised and horribly imprecise.
6. The poem does not move toward a better understanding of the ideas it alludes to. The vocabulary seems
to associate exploration with fear and isolation and
this is (paradoxically) quite an interesting acknowledgment of the poem’s refusal to go anywhere i.e. to
become a thing transformed by a creative process.

Table 1: Questions that we ask when reading a poem
straightforward programmatic manner (Table 2). Each of the
examples listed in the right-hand column of Table 1 (and a
plethora that are not listed) present a way of thinking about
the poem. We can see these as roughly analogous to the
agents in Table 2 (Minsky, 2006).
To illustrate, in response to a computer-generated poem:
Oh dog the mysterious demon
Why do you feel startle of attention?
Oh demon the lonely encounter
ghostly elusive ruler
Oh encounter the horrible glimpse
helpless introspective consciousness
A human critic might offer the following feedback:
1. The use of the word mysterious in the first line has
no resolution, real or attempted, or quest to find one.
4

Proceedings of the Sixth International Conference on Computational Creativity June 2015

271

Each of these six points is dual-voiced in the sense that
the critic is relaying the words of the poem with a new emphasis. Each such statement is one side of a micro-dialogue
(Bakhtin, 1984 [1963], p. 73). The challenge is, of course,
to bring the observations into the awareness of the computer
poet, across the “analogue divide.” Care should be taken not
just to blythely program the computer with more rules, but
rather to give attention to facilitating the process of learning
new rules contextually. We continue with the example from
this point of view in the following section.
First we will consider a reversal of roles, with the computer in the position of critic, looking at a passage from an
historical piece of poetry. We have selected a passage from
Robert Burns that might have – but in fact did not – serve as
a model for the poem generated above.

2. Send message

Moderator

2. Send message

1. Read log
Flowchart A
(F_A)

3. Writes message

4. Modify flowchart

Workshop
Log

3. Writes message

Flowchart B
(F_B)

4. Modify flowchart

Figure 2: Schematic diagram for a workshop built in the
FloWr system

I’m truly sorry man’s dominion
Has broken Nature’s social union,
An’ justifies that ill opinion
Which makes thee startle
At me, thy poor, earth born companion
An’ fellow mortal!

Seeds for a FloWr Garden
Keeping in mind the current limitations of FloWr – no looping or conditionals, only running one flowchart at a time and
in one direction – a conversation between ProcessNodes or
flowcharts is not immediately feasible. Figure 2 represents
a hypothetical design in which a Workshop could take place
with a minimally-altered version of FloWr. As shown in
Figure 2, each participant in the Workshop would be represented by a single node. One of these nodes is a moderator in
charge of dictating the interaction between the participants
of the Workshop, while the rest represent flowcharts that
have the ability to modify their own connections according
to the discussions from the Workshop – this can be achieved
by exploiting the scripting mechanism of FloWr and dynamically loading the new structure of the flowchart. Moreover,
a shared log would contain the history of the messages exchanged during the Workshop and a queue of messages waiting to be delivered. We define four different types of messages that can be exchanged:

Naturally, the first problem is for the computer to read the
poem. One of the approaches that is most appealing from
our point of view is the automatic generation of a semantic
network from the input text (Harrington and Clark, 2007).
We could straightforwardly extend the methods of Harrington and Clark with notions drawn from Table 2.
1. The passage begins with I/me, locating the poor,
earth born poet
2. thee/thy is another person, possibly the reader, who
becomes startled
3. Singular I contrasts with the class man
4. sorry is a sad emotion
5. truly exaggerates sorry
6. dominion is large
7. broken and union are opposites
8. sorry and justifies are opposites
9. union, companion, and fellow are positive words
about relationship and joining
10. broken, ill, poor, startle and mortal are related to
frailty
11. born and mortal are related
12. There are a lot of rhymes in the poem, at the end of
the lines, enjambed.

• comments about specific elements of a poem, or more
general statements about how the poem affects this reader.
• questions to facilitate comprehension of this commentary; for instance, the questions can vary from simple requests of sources of information (e.g. files, input from
another node, which resources a flowchart uses, etc.) to
process-specific details (e.g. current conditions, purpose,
other outstanding questions, etc.)
• answers would be associated to previous questions and
may contain simple text such as an url for the source of
information, or a piece of script representing a node used
by a flowchart.

These comments are very different from the other reading
above, and are differently interesting.
We’ve demonstrated that the computer is capable of asking objective questions of a poem. A similar semantic network approach would allow it to listen to feedback and take
it on board, even when it doesn’t understand the ways of
thinking that generate this feedback. Again, this links the
process of reading and writing poetry to a process of dialogue.

• suggestions are changes proposed by one participant to
another. Similar to the answer, this can be as simple as
suggesting the change of an information source, or more
complex, such as suggesting the replacement of a node
for an alternative node.
A Workshop session follows this communication protocol:
5

Proceedings of the Sixth International Conference on Computational Creativity June 2015

272

1. The moderator initialises an empty log and sends a message to the flowcharts to indicate that the session has started.
2. The flowcharts start writing messages in the log.
3. The moderator checks the current state of the workshop
by reading the log.
4. The moderator selects the next message in the queue and
passes it to the target flowchart.
5. The flowchart reads the message and acts accordingly, by
either (i) modifying its connections or; (ii) sending a message back, i.e., writing to the log.
6. Step 3 is repeated until no further message are left in the
queue.
Example. Figure 3 shows the poetry generator flowchart
that generates the poem about the “demon dog” presented
above. The flowchart uses two linguistic resources: ConceptNet (Liu and Singh, 2004), a semantic network of common knowledge, and Disco (Kolb, 2008), a semantic similarity words retrieval system. Let us assume the human critic
A has access to the system through a “UI flowchart” like a
Read-Eval-Print Loop (REPL), and the poetry generator B
is mainly concerned with maintaining a generative flowchart
like the one shown in the figure. The following exchange of
messages can occur:

Figure 3: The flowchart that created the “demon dog” poem

its basic purpose, and provide information about procedure, conditional behaviour, mappings between processes and
elements of a generated poem (like the mapping between
Disco3 and “lonely encounter”).
Altered versions of a flowchart (Charnley et al., 2014)
can be seen as parallel solutions that could be executed and
compared on a population basis with respect to some prespecified metrics in order to make an informed decision on
which suggestion(s) to follow, as hinted in the last step of
the example. In (Colton, Pease, Corneli, Cook, and Llano,
2014) we explored the related idea of modelling system progress over time. Learning new rules contextually would offer one clear measure of progress. Caveat lector: considerable work would be required to realise the ideas we’ve described in FloWr or any other platform we’re aware of.

1. Comment from participant A to participant B: The
words “lonely encounter” and “elusive ruler” in lines 2
and 3 are generalised and imprecise.
2. Question from participant B to participant A: I
identify the processes Disco3 and Disco4 as the source
of the problem. Can you suggest an alternative to Disco?
3. Suggestions from participant A to participant B: Use
WordNet or the Historical Thesaurus to find more expressive and specific terms for the core concepts in the poem;
try to link the core concepts together by chaining together
related concepts in ConceptNet or WordNet.
4. Action executed by participant B: Receives suggestions, creates several alternative versions of the script, executes them and decides which one is most coherent and
which conveys a sense of narrative.

Discussion
Potential applications. The paradigm advanced in this
paper would not remove the “generation” aspects of CC,
but would pair them more closely with reflection. The same
skills that support learning in a writers workshop may support a form of dialogue with the work itself, leading to richer
creative artefacts that show us more about how creativity
works. Focusing on social creativity does not suggest that
we should devalue works from lone creatives, but it does
suggest that we think about how we knit individuals together
in the social fabric of the CC community. The current model
at the International Conference for Computational Creativity
(ICCC) is similar to many other academic conferences: we
present our work to one another and build our sense of community in that way. But what about a track for computers
to present their work? The idea of computers interacting in
a workshop-like setting is not unprecendented. As Turing
(1951) foresaw, computational software has become highly
competent at Chess and reasonably competent at Go, partly
through continuous practice pitting programs against each

From this exchange, the computer might learn (without ever
being explicitly told) that expressive terms and narratives are
related, and it might begin to discover a way to produce coherent poems with a narrative structure.
Since the computer has source code instead of a brain, we
can use it to do control studies with process. However, in
general source code does not uniquely determine process:
contextual effects are what make an experiment an experiment. As described in (Cook and Colton, 2013), code may
include hints about its expected operating context. This is
related to our theme of embedding process within an artefact. In this connection, one extension to FloWr that would
help to facilitate dialogue between flowcharts would be to
add machine-readable commentary to ProcessNodes. Commentaries would label a node’s inputs and outputs, describe
6

Proceedings of the Sixth International Conference on Computational Creativity June 2015

273

Acknowledgements

other. Poetry could be approached in a similar way, reviving the floral games of the troubadours. Other creative arts
may also be amenable to the same sort of approach. Gabriel mentions “brainstorms, critiques, charrettes, pair programming, open-source software projects, and even master
classes” (Gabriel, 2002, p. 11). The sort of thinking we have
developed here might be adapted to contexts like these.

This research has been supported by EPSRC grants
EP/L00206X and EP/J004049, and the Future and Emerging Technologies (FET) programme within the Seventh
Framework Programme for Research of the European Commission, under FET-Open Grant numbers: 611553 (COINVENT) and 611560 (WHIM).

References

Potential criticisms. It can be challenging and timeconsuming to invite and process feedback, and the Workshop would often be seen as unnecessary for standardised
production cycles that can already produce artefacts that are
“good enough.” Furthermore, since we often seem to get
the computer to do just what we have in mind when we’re
programming, it might not make sense to treat it as a distinct other and invite it to participate in a dialogue. (Some
REPL users may disagree, and may already think of programming as a dialogue.) From our read/write perspective
on computational creativity, the most immediate problem is
that appreciation of works of art is rather hard. Consider
the difference between creating a video game (for example)
and playing a video game. In the first case, the designer
has full control over the rule-set, game mechanics, interaction devices and so forth. At least one computational video
game designer can play its own games (Cook, Colton, Raad,
and Gow, 2013), and an experiment shows that it is possible for an artificial game player to learn how to play classic video games using reinforcement learning, starting from
raw pixels (Mnih et al., 2013) – but both are quite far from
general-purpose game playing. This is itself a topic of contemporary research, and it serves to illustrate that coping
with feedback is a major challenge for AI research. Finally,
we are not in a position to make strong claims about the
quality of workshopped artefacts, although our experience
with poetry has shown us that high-quality poems are often
exactly the ones which teach us about the creative process.
We hope future research will explore this connection further.

Anderson, D. R., and Hausman, C. R. (1992). The Role of
Aesthetic Emotion in RG Collingwood’s Conception
of Creative Activity. Journal of Aesthetics and Art
Criticism, 299–305.
Baars, B. J. (1997). In the Theater of Consciousness: The
Workspace of the Mind. Journal of Consciousness
Studies, 4.
Bakhtin, M. (1984 [1963]). Problems of Dostoevsky’s poetics. Translated by Caryl Emerson. University of Minnesota Press.
Bakhtin, M. (2010 [1986]). Toward a Philosophy of the Act.
University of Texas Press.
Bergson, H. (1911 [1907]). Creative evolution. Henry Holt
and Company.
Cardoso, A., Veale, T., and Wiggins, G. A. (2009). Converging on the divergent: the history (and future) of the
international joint workshops in computational creativity. AI Magazine, 30(3), 15–22.
Charnley, J., Colton, S., and Llano, M. T. (2014). The FloWr
framework: automated flowchart construction, optimisation and alteration for creative systems. In D. Ventura, S. Colton, N. Lavrac, and M. Cook (Eds.), Procs.
of the 5th International Conference on Computational
Creativity.
Colton, S., Bundy, A., and Walsh, T. (2000). Agent based
cooperative theory formation in pure mathematics. In
Procs. of AISB symposium on creative and cultural
aspects & applications of AI and cognitive science.
Colton, S., Pease, A., Corneli, J., Cook, M., and Llano,
T. (2014). Assessing Progress in Building Autonomously Creative Systems. In D. Ventura, S. Colton, N.
Lavrac, and M. Cook (Eds.), Procs. of the 5th International Conference on Computational Creativity.
Colton, S., and Wiggins, G. A. (2012). Computational Creativity: The Final Frontier? In Procs. of 20th European
Conference on Artificial Intelligence (ECAI) (pp. 21–
26). Montpellier, France.
Cook, M., and Colton, S. (2013). From Mechanics to Meaning and Back Again: Exploring Techniques for the
Contextualisation of Code. In Procs. of the AIIDE
Workshop on Artificial Intelligence and Game Aesthetics.
Cook, M., Colton, S., Raad, A., and Gow, J. (2013). Mechanic Miner: Reflection-Driven Game Mechanic Discovery and Level Design. In Procs. of EvoGames
Workshop.
Corneli, J., and Jordanous, A. (2015). Implementing feedback in creative systems: a workshop approach. arXiv:

Conclusions
The ideas of social interaction, feedback, and evaluation
have frequently been discussed in CC, but implementation
and theorisation around these topics have been more limited. In the current paper, we suggest giving artefacts more
agency, designing computer programs with more autonomy,
and focusing research effort on creative evolution. We have
shown that in principle computers can engage in dialogue
about poems, which points to a theory of poetics rooted in
the making of boundary-crossing objects and processes. In
order to move from thought experiment to computational
simulation, FloWr could be helpfully extended with further programmer facilities including loops, subroutines, and
commentaries, along with the ability to generate-and-test
in a population-based manner, and the ability to learn over
time. Workshops and related approaches are suitable for
autonomous learning and development of the creative process, but they face technical and also some theoretical limitations. Dialogue may offer a way to creatively push these
limits, empowering both programs and programmers.
7

Proceedings of the Sixth International Conference on Computational Creativity June 2015

274

1505 . 06850 [cs.AI]. Retrieved from http : / /
arxiv.org/abs/1505.06850

Minsky, M. (1967). Why programming is a good medium for
expressing poorly understood and sloppily formulated
ideas. Design and Planning II-Computers in Design
and Communication, 120–125.
Minsky, M. (1988). The Society of Mind. New York: Simon
and Schuster.
Minsky, M. (2006). The Emotion Machine: Commonsense
Thinking, Artificial Intelligence, and the Future of the
Human Mind. New York: Pantheon.
Misztal, J., and Indurkhya, B. (2014). Poetry generation system with an emotional personality. In Procs. of 5th International Conference on Computational Creativity.
Mnih, V., Kavukcuoglu, K., Silver, D., Graves, A., Antonoglou, I., Wierstra, D., and Riedmiller, M. (2013). Playing Atari with Deep Reinforcement Learning. arXiv:
1312 . 5602 [cs.LG]. Retrieved from http : / /

Corneli, J., Pease, A., Colton, S., Jordanous, A., and Guckelsberger, C. (2015). Modelling serendipity in a computational context. arXiv: 1411.0440 [cs.AI]. Retrieved from http://arxiv.org/abs/1411.0440
Csikszentmihalyi, M. (1988). Society, culture, and person: a
systems view of creativity. In R. J. Sternberg (Ed.),
The Nature of Creativity (Chap. 13, pp. 325–339).
Cambridge, UK: Cambridge University Press.
Dewey, J. (1958 [1934]). Art as experience. Capricorn
Books.
Gabriel, R. P. (2002). Writer’s Workshops and the Work of
Making Things: Patterns, Poetry. . . Addison-Wesley
Longman Publishing Co., Inc.
Gervás, P. (2010). Engineering Linguistic Creativity: Bird
Flight and Jet Planes. In NAACL HLT 2010 Second
Workshop on Computational Approaches to Linguistic
Creativity. Los Angeles: Association for Computational Linguistics.
Gervás, P., and Leon, C. (2014). Reading and writing as a
creative cycle: the need for a computational model. In
D. Ventura, S. Colton, N. Lavrac, and M. Cook (Eds.),
Procs. of the 5th International Conference on Computational Creativity.
Harrington, B., and Clark, S. (2007). ASKNet: Automated
Semantic Knowledge Network. In A. Howe, and R.
Holte (Eds.), Procs. of the Twenty-Second AAAI Conference on Artificial Intelligence (Vol. 2, pp. 889–
895). AAAI Press.
Jordanous, A. (2011). Evaluating Evaluation: Assessing
Progress in Computational Creativity Research. In
Procs. of the Second International Conference on
Computational Creativity (ICCC-11). Mexico.
Jordanous, A. (2015). Four PPPPerspectives on computational creativity. In Procs. of the AISB Symposium on
Computational Creativity.
King, S. (2000). On writing. Simon and Schuster.
Kirke, A., and Miranda, E. (2013). Emotional and Multiagent Systems in Computer-aided Writing and Poetry.
In Procs. of the Artificial Intelligence and Poetry Symposium (AISB’13) (pp. 17–22). Exeter University, Exeter, UK.
Kolb, P. (2008). DISCO: A Multilingual Database of Distributionally Similar Words. In Procs. of the 9th Conference on Natural Language Processing.
Liu, H., and Singh, P. (2004). Commonsense Reasoning in
and Over Natural Language. In Procs. of the 8th International Conference on Knowledge-Based Intelligent
Information and Engineering Systems (Vol. 3215).
LNCS. Springer.
Manurung, R., Ritchie, G., and Thompson, H. (2012). Using Genetic Algorithms to Create Meaningful Poetic
Text. Journal of Experimental and Theoretical Artificial Intelligence, 24, 43–64.
McGraw, G., and Hofstadter, D. (1993). Perception and creation of diverse alphabetic styles. AISB Quarterly, 85,
42–49.

arxiv.org/abs/1312.5602

Montfort, N., Pérez y Pérez, R., Harrell, D. F., and Campana, A. (2013). Slant: A Blackboard System to Generate Plot, Figuration, and Narrative Discourse Aspects of Stories. In Proceedings of the fourth international conference on computational creativity.
Pease, A., Guhe, M., and Smaill, A. (2010). Some Aspects
of Analogical Reasoning in Mathematical Creativity.
In Procs. of the International Conference on Computational Creativity (pp. 60–64). Lisbon, Portugal.
Pérez y Pérez, R., Aguilar, A., and Negrete, S. (2010). The
ERI-Designer: A Computer Model for the Arrangement of Furniture. Minds and Machines, 20(4), 533–
564.
Poincaré, H. (1929 [1908]). Mathematical Creation. In The
Foundations of Science: Science and Hypothesis, The
Value of Science, Science and Method (Chap. III of
Book I. Science and the Scientist, Vol. Science and
Method, pp. 383–394). New York: The Science Press.
Rhodes, M. (1961). An analysis of creativity. Phi Delta
Kappan, 42(7), 305–310.
Saunders, R. (2012). Towards Autonomous Creative Systems: A Computational Approach. Cognitive Computation, 4(3), 216–225.
Seikkula, J., and Arnkil, T. E. (2014). Open Dialogues and
Anticipations – Respecting Otherness in the Present
Moment. Helsinki: National Institute for Health and
Welfare.
Sosa, R., Gero, J., and Jennings, K. (2009). Growing and
destroying the worth of ideas. In Procs. of the 7th
ACM Creativity and Cognition conference (pp. 295–
304). Berkeley, California.
Turing, A. (1951). Intelligent machinery, a heretical theory.
A lecture given to ‘51 Society’ at Manchester.
Von Foerster, H. (2003 [1979]). Cybernetics of cybernetics. In Understanding understanding (pp. 283–286).
Springer.
Whitehouse, P. (1978). The Meaning of ‘Emotion’ in
Dewey’s Art as Experience. Journal of Aesthetics and
Art Criticism, 149–156.

8
Proceedings of the Sixth International Conference on Computational Creativity June 2015

275

